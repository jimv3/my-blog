{"componentChunkName":"component---src-templates-blog-post-js","path":"/differences-in-std-dev/","result":{"data":{"site":{"siteMetadata":{"title":"Jim Vaughan","siteUrl":"https://jimvaughan.dev"}},"markdownRemark":{"id":"a621772a-1c64-5784-82a2-c65f157df17a","excerpt":"I was using numpy the other day to calculate statistics on a column from a pandas dataframe and comparing\nto the output of . While running\nthe code I noticedâ€¦","html":"<p>I was using numpy the other day to calculate statistics on a column from a pandas dataframe and comparing\nto the output of <code class=\"language-text\">DataFrame.describe()</code>. While running\nthe code I noticed that the standard deviation values were different.</p>\n<p>After doing some digging I found the reason. By default, pandas.describe uses a ddof (Delta Degrees of Freedom)\nvalue of 1 but numpy defaults to 0. In effect, pandas is adjusting the standard deviation to account for a sample (N - 1) rather than the population (N).</p>\n<p>There is no way I have found to change the way describe works. Instead, you can pass <code class=\"language-text\">ddof=1</code> in <code class=\"language-text\">numpy.std()</code>.</p>","frontmatter":{"title":"Differences in Standard Deviation","date":"October 19, 2019","description":"Why the standard deviation can be different in Python for the same data."}}},"pageContext":{"slug":"/differences-in-std-dev/","previous":{"fields":{"slug":"/welcome/"},"frontmatter":{"title":"Welcome"}},"next":{"fields":{"slug":"/host-react-on-heroku/"},"frontmatter":{"title":"Hosting React on Heroku"}}}},"staticQueryHashes":["2677188060","63159454"]}